        -:    0:Source:testme.c
        -:    0:Graph:testme.gcno
        -:    0:Data:testme.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include<stdio.h>
        -:    2:#include<string.h>
        -:    3:#include<stdlib.h>
        -:    4:#include<time.h>
        -:    5:
function inputChar called 27137639 returned 100% blocks executed 100%
 27137639:    6:char inputChar()
        -:    7:{
 27137639:    8:	char randChar = "abcdefghijklmnopqrstuvwxyz[](){} "[random()%33];
call    0 returned 100%
        -:    9:
 27137639:   10:    return randChar;
        -:   11:}
        -:   12:
function inputString called 27137639 returned 100% blocks executed 100%
 27137639:   13:char *inputString()
        -:   14:{
 27137639:   15:	int STRING_LENGTH = 6;
 27137639:   16:    char randString[STRING_LENGTH-1];
        -:   17:	char randChar;
        -:   18:
189963473:   19:	for(int i = 0; i < STRING_LENGTH; i++){
branch  0 taken 86%
branch  1 taken 14% (fallthrough)
162825834:   20:		randChar = "abcdefghijklmnopqrstuvwxyz "[random()%27];
call    0 returned 100%
162825834:   21:		randString[i] = randChar;
        -:   22:	}
        -:   23:
        -:   24:	// Half the time put a '\0' at the end of the string
 27137639:   25:	if(random()%2 == 0){
call    0 returned 100%
branch  1 taken 50% (fallthrough)
branch  2 taken 50%
 13567325:   26:		randString[STRING_LENGTH-1] = '\0';
        -:   27:	}
        -:   28:
 27137639:   29:	return randString;
        -:   30:}
        -:   31:
function testme called 1 returned 100% blocks executed 100%
        1:   32:void testme()
        -:   33:{
        1:   34:  int tcCount = 0;
        -:   35:  char *s;
        -:   36:  char c;
        1:   37:  int state = 0;
        1:   38:  int flag = 1; // remove this line
 27137641:   39:  while (flag)	// change back to 1
branch  0 taken 99%
branch  1 taken 1% (fallthrough)
        -:   40:  {
 27137639:   41:    tcCount++;
 27137639:   42:    c = inputChar();
call    0 returned 100%
 27137639:   43:    s = inputString();
call    0 returned 100%
        -:   44:    //printf("Iteration %d: c = %c, s = %s, state = %d\n", tcCount, c, s, state);
        -:   45:
 27137639:   46:    if (c == '[' && state == 0) state = 1;
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
 27137639:   47:    if (c == '(' && state == 1) state = 2;
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
 27137639:   48:    if (c == '{' && state == 2) state = 3;
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
 27137639:   49:    if (c == ' '&& state == 3) state = 4;
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
 27137639:   50:    if (c == 'a' && state == 4) state = 5;
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
 27137639:   51:    if (c == 'x' && state == 5) state = 6;
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
 27137639:   52:    if (c == '}' && state == 6) state = 7;
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
 27137639:   53:    if (c == ')' && state == 7) state = 8;
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
 27137639:   54:    if (c == ']' && state == 8) state = 9;
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
 27137639:   55:    if (s[0] == 'r' && s[1] == 'e'
branch  0 taken 4% (fallthrough)
branch  1 taken 96%
branch  2 taken 4% (fallthrough)
branch  3 taken 96%
    37503:   56:       && s[2] == 's' && s[3] == 'e'
branch  0 taken 4% (fallthrough)
branch  1 taken 96%
branch  2 taken 3% (fallthrough)
branch  3 taken 97%
       45:   57:       && s[4] == 't' && s[5] == '\0'
branch  0 taken 4% (fallthrough)
branch  1 taken 96%
branch  2 taken 50% (fallthrough)
branch  3 taken 50%
        1:   58:       && state == 9)
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -:   59:    {
        1:   60:      printf("error ");
call    0 returned 100%
        -:   61:      //exit(200); UNCOMMENT
        1:   62:		flag = 0; // remove this line
        -:   63:    }
        -:   64:  }
        1:   65:}
        -:   66:
        -:   67:
function main called 1 returned 100% blocks executed 100%
        1:   68:int main(int argc, char *argv[])
        -:   69:{
        1:   70:    srand(time(NULL));
call    0 returned 100%
call    1 returned 100%
        1:   71:    testme();
call    0 returned 100%
        1:   72:    return 0;
        -:   73:}
